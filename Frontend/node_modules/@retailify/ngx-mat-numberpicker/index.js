import { Component, EventEmitter, Input, NgModule, Output } from '@angular/core';
import { CommonModule } from '@angular/common';
import { MatButtonModule, MatIconModule, MatInputModule } from '@angular/material';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var NumberPickerComponent = (function () {
    function NumberPickerComponent() {
        this.decreaseButtonDisabled = false;
        this.increaseButtonDisabled = false;
        this.hintStartText = '';
        this.hintEndText = '';
        this.disabled = false;
        this.min = 0;
        this.max = 50;
        this.onChange = new EventEmitter();
        this.numberPickerValue = 0;
    }
    /**
     * @return {?}
     */
    NumberPickerComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.defaultValueSet();
        this.hintTextsSet();
        this.checkButtons();
    };
    /**
     * @param {?} event
     * @return {?}
     */
    NumberPickerComponent.prototype.increase = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        event.preventDefault();
        if (this.numberPickerValue < this.max) {
            this.numberPickerValue++;
            this.onChange.emit(this.numberPickerValue);
        }
        this.checkButtons();
    };
    /**
     * @param {?} event
     * @return {?}
     */
    NumberPickerComponent.prototype.decrease = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        event.preventDefault();
        if (this.getValue() > this.min) {
            this.numberPickerValue--;
            this.onChange.emit(this.numberPickerValue);
        }
        this.checkButtons();
    };
    /**
     * @return {?}
     */
    NumberPickerComponent.prototype.checkButtons = /**
     * @return {?}
     */
    function () {
        this.increaseButtonDisabled = false;
        this.decreaseButtonDisabled = false;
        if (this.getValue() <= this.min) {
            this.decreaseButtonDisabled = true;
        }
        if (this.numberPickerValue >= this.max) {
            this.increaseButtonDisabled = true;
        }
    };
    /**
     * @return {?}
     */
    NumberPickerComponent.prototype.defaultValueSet = /**
     * @return {?}
     */
    function () {
        if (this.default === null || this.default === undefined) {
            this.setValue(0);
        }
        else {
            this.setValue(this.default);
        }
    };
    /**
     * @return {?}
     */
    NumberPickerComponent.prototype.hintTextsSet = /**
     * @return {?}
     */
    function () {
        this.setHintStartText(this.starttext);
        this.setHintEndText(this.endtext);
    };
    /**
     * @return {?}
     */
    NumberPickerComponent.prototype.getValue = /**
     * @return {?}
     */
    function () {
        return this.numberPickerValue;
    };
    /**
     * @param {?} value
     * @return {?}
     */
    NumberPickerComponent.prototype.setValue = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.numberPickerValue = value;
    };
    /**
     * @param {?} value
     * @return {?}
     */
    NumberPickerComponent.prototype.setHintStartText = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.hintStartText = value;
    };
    /**
     * @param {?} value
     * @return {?}
     */
    NumberPickerComponent.prototype.setHintEndText = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.hintEndText = value;
    };
    NumberPickerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ngx-mat-numberpicker',
                    template: "<span flex> <button mat-icon-button (click)=\"decrease($event)\" [disabled]=\"decreaseButtonDisabled\"><mat-icon style=\"padding-bottom: 2px; padding-left: 1px;\">remove_circle_outline</mat-icon></button> <mat-form-field flex> <input matInput #inputNumberPickerControl name=\"numberPickerInputField\" [value]=\"numberPickerValue\" style=\"text-align:center;\" [disabled]=\"disabled\" > <mat-hint align=\"start\">{{hintStartText}}</mat-hint> <mat-hint align=\"end\">{{hintEndText}}</mat-hint> </mat-form-field> <button mat-icon-button (click)=\"increase($event)\" [disabled]=\"increaseButtonDisabled\"><mat-icon style=\"padding-bottom: 2px; padding-left: 1px;\">add_circle_outline</mat-icon></button> </span> ",
                },] },
    ];
    /** @nocollapse */
    NumberPickerComponent.ctorParameters = function () { return []; };
    NumberPickerComponent.propDecorators = {
        "disabled": [{ type: Input },],
        "min": [{ type: Input },],
        "max": [{ type: Input },],
        "default": [{ type: Input },],
        "starttext": [{ type: Input },],
        "endtext": [{ type: Input },],
        "onChange": [{ type: Output },],
    };
    return NumberPickerComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
var NumberPickerModule = (function () {
    function NumberPickerModule() {
    }
    /**
     * @return {?}
     */
    NumberPickerModule.forRoot = /**
     * @return {?}
     */
    function () {
        return {
            ngModule: NumberPickerModule,
            providers: []
        };
    };
    NumberPickerModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        MatButtonModule,
                        MatIconModule,
                        MatInputModule,
                    ],
                    declarations: [
                        NumberPickerComponent,
                    ],
                    exports: [
                        NumberPickerComponent,
                    ]
                },] },
    ];
    /** @nocollapse */
    NumberPickerModule.ctorParameters = function () { return []; };
    return NumberPickerModule;
}());

export { NumberPickerModule, NumberPickerComponent };
